name: Docker Build and Deploy

on:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Install dependencies and run tests for all microservices
        run: |
          for dir in delete-account-ms edit-avatar-ms edit-email-ms edit-password-ms edit-username-ms get-info-ms; do
            cd $dir
            npm install
            npm test
            cd ..
          done

      - name: Build Docker images using Docker Compose
        run: |
          docker-compose -f docker-compose.yml build

      - name: Push Docker images to Docker Hub
        run: |
          docker-compose -f docker-compose.yml push

      - name: Ensure deployment secrets are defined
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            [[ -z "${{ secrets.EC2_PROD }}" || -z "${{ secrets.SSH_KEY_PROD }}" ]] && { echo "❌ Falta EC2_PROD o SSH_KEY_PROD"; exit 1; }
          else
            [[ -z "${{ secrets.EC2_QA }}" || -z "${{ secrets.SSH_KEY_QA }}" ]] && { echo "❌ Falta EC2_QA o SSH_KEY_QA"; exit 1; }
          fi

      - name: Set deployment secrets
        id: set_secrets
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "EC2=${{ secrets.EC2_PROD }}" >> $GITHUB_ENV
            echo "SSH_KEY=${{ secrets.SSH_KEY_PROD }}" >> $GITHUB_ENV
          else
            echo "EC2=${{ secrets.EC2_QA }}" >> $GITHUB_ENV
            echo "SSH_KEY=${{ secrets.SSH_KEY_QA }}" >> $GITHUB_ENV
          fi

      - name: Clean up existing containers on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2 }}
          username: ubuntu
          key: ${{ env.SSH_KEY }}
          port: 22
          debug: true
          script: |
            docker stop $(docker ps -aq) || true
            docker rm $(docker ps -aq) || true
            docker system prune -af || true

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2 }}
          username: ubuntu
          key: ${{ env.SSH_KEY }}
          port: 22
          debug: true
          script: |
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
            export S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            export AWS_REGION=${{ secrets.AWS_REGION }}
            export DB_PORT=${{ secrets.DB_PORT }}
            export DB_SSL=${{ secrets.DB_SSL }}

            docker run -d --name delete-account-ms \
              -p 5008:3008 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/delete-account-ms:latest

            docker run -d --name edit-avatar-ms \
              -p 5007:3007 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/edit-avatar-ms:latest

            docker run -d --name edit-email-ms \
              -p 5005:3005 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/edit-email-ms:latest

            docker run -d --name edit-password-ms \
              -p 5006:3006 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/edit-password-ms:latest

            docker run -d --name edit-username-ms \
              -p 5004:3004 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/edit-username-ms:latest

            docker run -d --name get-info-ms \
              -p 5009:3009 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              -e JWT_SECRET=$JWT_SECRET \
              -e JWT_EXPIRATION=$JWT_EXPIRATION \
              -e S3_BUCKET_NAME=$S3_BUCKET_NAME \
              -e AWS_REGION=$AWS_REGION \
              -e DB_PORT=$DB_PORT \
              -e DB_SSL=$DB_SSL \
              ${{ secrets.DOCKERHUB_USERNAME }}/get-info-ms:latest
