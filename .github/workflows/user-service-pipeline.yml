name: Docker Build and Deploy

on:
  push:
    branches:
      - test

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout the code
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Log in to Docker Hub before building images
    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    # Step 3: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # Step 4: Install dependencies and run tests for each microservice
    - name: Install dependencies and run tests for all microservices
      run: |
        # Install dependencies and test for delete-account-ms
        cd delete-account-ms
        npm install
        npm test

        # Install dependencies and test for edit-avatar-ms
        cd ../edit-avatar-ms
        npm install
        npm test

        # Install dependencies and test for edit-email-ms
        cd ../edit-email-ms
        npm install
        npm test

        # Install dependencies and test for edit-password-ms
        cd ../edit-password-ms
        npm install
        npm test

        # Install dependencies and test for edit-username-ms
        cd ../edit-username-ms
        npm install
        npm test

         # Install dependencies and test for get-info-ms
        cd ../get-info-ms
        npm install
        npm test

    # Step 5: Build Docker images using Docker Compose
    - name: Build Docker images using Docker Compose
      run: |
        docker-compose -f docker-compose.yml build

    # Step 6: Push Docker images to Docker Hub
    - name: Push Docker images to Docker Hub
      run: |
        docker-compose -f docker-compose.yml push

    # Step 7: Connect to EC2, stop and remove existing containers
    - name: Clean up existing containers on EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_QA }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY_QA }}
        port: 22
        debug: true
        script: |
          # Stop and remove existing containers
          docker stop $(docker ps -aq) || true
          docker rm $(docker ps -aq) || true
          docker system prune -af || true

    # Step 8: Connect to EC2 and deploy the new containers from Docker Hub
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_QA }}  # Use the EC2 public IP (EC2_QA secret)
        username: ubuntu  # User
        key: ${{ secrets.SSH_KEY_QA }}  # Use SSH_KEY_QA secret (private key)
        port: 22
        debug: true  # Enable debugging for more details
        script: |
          # Export environment variables for each container
          
          # Common environment variables
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
          export S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export DB_PORT=${{ secrets.DB_PORT }}
          export DB_SSL=${{ secrets.DB_SSL }}

          # Run containers for each microservice
          docker run -d --name delete-account-ms \
            -p 5008:3008 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e AWS_DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/delete-account-ms:latest

          docker run -d --name edit-avatar-ms \
            -p 5007:3007 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/edit-avatar-ms:latest

          docker run -d --name edit-email-ms \
            -p 5005:3005 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/edit-email-ms:latest

          docker run -d --name edit-password-ms \
            -p 5006:3006 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/edit-password-ms:latest

          docker run -d --name edit-username-ms \
            -p 5004:3004 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/edit-username-ms:latest

            docker run -d --name get-info-ms \
            -p 5009:3009 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SSL=${{ secrets.DB_SSL }}\
            ${{ secrets.DOCKERHUB_USERNAME }}/get-info-ms:latest
